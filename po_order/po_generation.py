# po_order/po_generation.py

import pdfkit
from jinja2 import Template
import ssl
import smtplib
from email.message import EmailMessage
from email.utils import formataddr
from typing import Dict

HTML_PO_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
 <meta charset="utf-8" />
 <style>
  body { font-family: Arial, sans-serif; margin: 20px; }
  h1 { text-align: center; }
  table { width: 100%; border: 1px solid #ccc; border-collapse: collapse; margin-top: 20px; }
  td, th { border: 1px solid #ccc; padding: 8px; }
 </style>
</head>
<body>
  <h1>Purchase Order</h1>
  <p><strong>Vendor:</strong> {{ vendor_name }}</p>
  <p><strong>SKU:</strong> {{ sku }}</p>
  <p><strong>Product:</strong> {{ product_name }}</p>
  <p><strong>Quantity:</strong> {{ quantity }}</p>
  <p><strong>Unit Price:</strong> ${{ unit_price }}</p>
  <p><strong>Total Cost:</strong> ${{ total_cost }}</p>
  <hr/>
  <p>Generated by AI Procurement Demo</p>
</body>
</html>
"""

def generate_po_pdf(po_data: Dict) -> bytes:
    template = Template(HTML_PO_TEMPLATE)
    html = template.render(**po_data)
    pdf_bytes = pdfkit.from_string(html, False)
    return pdf_bytes

def send_po_email(po_data: Dict, recipient_email: str):
    body = f"""Purchase Order:
Vendor: {po_data['vendor_name']}
Product: {po_data['product_name']}
Quantity: {po_data['quantity']}
Unit Price: ${po_data['unit_price']}
Total Cost: ${po_data['total_cost']}

Generated by AI Procurement Demo
"""
    msg = EmailMessage()
    msg["Subject"] = "Your Purchase Order"
    msg["From"] = formataddr(("AI Procurement Bot", "noreply@example.com"))
    msg["To"] = recipient_email
    msg.set_content(body)

    smtp_server = "smtp.gmail.com"
    smtp_port = 587
    sender_email = "noreply@example.com"
    sender_password = "YOUR_APP_PASSWORD"

    context = ssl.create_default_context()
    context.check_hostname = False
    context.verify_mode = ssl.CERT_NONE

    with smtplib.SMTP(smtp_server, smtp_port) as server:
        server.ehlo()
        server.starttls(context=context)
        server.ehlo()
        server.login(sender_email, sender_password)
        server.send_message(msg)
